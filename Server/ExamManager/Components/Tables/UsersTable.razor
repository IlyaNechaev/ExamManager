@namespace ExamManager.Components
@using Microsoft.AspNetCore.Components
@using ExamManager.Services
@using ExamManager.Models

@inject ILogger<UsersTable> Logger
@inject ExamManager.Services.IUserService UserService

<div class="table">
    <div class="bar">
        <input id="student-name"
               class="student-name"
               type="text"
               placeholder="Поиск"
               @oninput="SearchChanged" />
        <input id="open-button"
               type="button"
               class="btn-action"
               value="Добавить" />
        <input id="reload-button"
               type="button"
               class="btn-info"
               value="Обновить" />
    </div>
    <div class="header">
        <div class="row">
            <div size="1">№</div>
            <div size="3">Фамилия, имя</div>
            <div size="2">Группа</div>
            <div size="2">Задачи</div>
            <div size="2"></div>
        </div>
    </div>
    <div class="body">
        @if (_students.Count == 0)
        {
            <div class="loader"></div>
        }
        else
        {
            @for (int i = 0; i < _students.Count; i++)
            {
                <div class="row">
                    <div>@(i + 1)</div>
                    <div>@($"{_students[i].LastName} {_students[i].FirstName}")</div>
                </div>
            }
        }
    </div>
</div>

@code {

    [Parameter]
    public Guid CurrentUserID { get; set; }

    private List<User> _students { get; set; } = new();

    private string _rowClass { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var options = new UserOptions
            {
                ExcludeYourself = true
            };
        _students = (await UserService.GetUsers(options, includeGroup: true)).ToList();
    }

    private async Task SearchChanged(ChangeEventArgs e)
    {
        var options = new UserOptions
            {
                Name = e.Value?.ToString()
            };

        _students = new();
        _students = (await UserService.GetUsers(options, includeGroup: true)).ToList();
        Logger.LogInformation("Blazor");
    }
}
